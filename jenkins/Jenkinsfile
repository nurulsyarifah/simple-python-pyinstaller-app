pipeline {
    agent any

    stages {
        stage('Build') {
            agent {
                docker {
                    image 'python:3.8-slim'
                }
            }
            steps {
                sh 'python -m py_compile sources/add2vals.py sources/calc.py'
            }
        }

        stage('Test') {
            agent {
                docker {
                    image 'python:3.8-slim'
                }
            }
            steps {
                sh 'pip install --user pytest'
                sh 'pytest --verbose --junit-xml test-reports/results.xml sources/test_calc.py'
            }
            post {
                always {
                    junit 'test-reports/results.xml'
                }
            }
        }

        stage('Deliver') {
            agent {
                docker {
                    image 'python:3.8-slim'
                }
            }
            steps {
                sh 'pip install --user --upgrade pip'
                sh 'pip install --user --no-cache-dir pyinstaller'
                sh 'pyinstaller --onefile sample.py'
                archiveArtifacts artifacts: 'dist/sample', fingerprint: true
            }
        }
    }
}
