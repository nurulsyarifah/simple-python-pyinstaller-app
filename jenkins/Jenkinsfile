pipeline {
    agent {
        docker {
            image 'python:3.8-slim'
            args '--user root'
        }
    }

    stages {
        stage('Setup') {
            steps {
                sh 'pip install --user --upgrade pip'
            }
        }

        stage('Build') {
            steps {
                sh 'pip install --user --no-cache-dir pyinstaller'
                sh 'python -m py_compile sources/add2vals.py sources/calc.py'
            }
        }

        stage('Test') {
            steps {
                sh 'pip install --user --no-cache-dir pytest'
                sh 'export PATH=$HOME/.local/bin:$PATH && pytest --verbose --junit-xml test-reports/results.xml sources/test_calc.py'
            }
            post {
                always {
                    junit 'test-reports/results.xml'
                }
            }
        }

        stage('Deliver') {
            steps {
                sh 'apt update && apt install -y binutils'
                sh 'export PATH=$HOME/.local/bin:$PATH && pyinstaller --onefile sample.py'
                archiveArtifacts artifacts: 'dist/sample', fingerprint: true
            }
        }
    }

    post {
        always {
            echo "Pipeline Execution Finished"
        }
        success {
            echo "Build & Deployment Success!"
        }
        failure {
            echo "Build Failed!"
        }
    }
}
